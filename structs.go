package main

// These are all the structs used by Sweather. Some are regular types, such as
// coordinates, while others are structs used for API responses generated by
// https://mholt.github.io/json-to-go

// struct used for a coordinate pair of latitude and longitude
// note: we're switching up the x and the y b/c the geocoding endpoint used
// longitude,latitude, but we want to use latitude,longitude.
type Coordinate struct {
	X float64	`json:"y"`
	Y float64	`json:"x"`
}

// used for geocoding endoint. Minorly modified 
// https://geocoding.geo.census.gov/geocoder/locations/onelineaddress
type Geocoding struct {
	Result struct {
		Input struct {
			Benchmark struct {
				ID                   string `json:"id"`
				Benchmarkname        string `json:"benchmarkName"`
				Benchmarkdescription string `json:"benchmarkDescription"`
				Isdefault            bool   `json:"isDefault"`
			} `json:"benchmark"`
			Address struct {
				Address string `json:"address"`
			} `json:"address"`
		} `json:"input"`
		Addressmatches []struct {
			Matchedaddress string `json:"matchedAddress"`
			Coordinates Coordinate `json:"coordinates"`
			Tigerline struct {
				Tigerlineid string `json:"tigerLineId"`
				Side        string `json:"side"`
			} `json:"tigerLine"`
			Addresscomponents struct {
				Fromaddress     string `json:"fromAddress"`
				Toaddress       string `json:"toAddress"`
				Prequalifier    string `json:"preQualifier"`
				Predirection    string `json:"preDirection"`
				Pretype         string `json:"preType"`
				Streetname      string `json:"streetName"`
				Suffixtype      string `json:"suffixType"`
				Suffixdirection string `json:"suffixDirection"`
				Suffixqualifier string `json:"suffixQualifier"`
				City            string `json:"city"`
				State           string `json:"state"`
				Zip             string `json:"zip"`
			} `json:"addressComponents"`
		} `json:"addressMatches"`
	} `json:"result"`
}


// used for NWS points API endpoint. Minorly modified
// https://api.weather.gov/points/{latitude},{longitude} 
type WeatherPoint struct {
	Context  []interface{} `json:"@context"`
	ID       string        `json:"id"`
	Type     string        `json:"type"`
	Geometry struct {
		Type        string    `json:"type"`
		Coordinates []float64 `json:"coordinates"`
	} `json:"geometry"`
	Properties struct {
		ID                  string `json:"@id"`
		Type                string `json:"@type"`
		Cwa                 string `json:"cwa"`
		Forecastoffice      string `json:"forecastOffice"`
		Gridid              string `json:"gridId"`
		Gridx               int    `json:"gridX"`
		Gridy               int    `json:"gridY"`
		Forecast            string `json:"forecast"`
		Forecasthourly      string `json:"forecastHourly"`
		Forecastgriddata    string `json:"forecastGridData"`
		Observationstations string `json:"observationStations"`
		Relativelocation    struct {
			Type     string `json:"type"`
			Geometry struct {
				Type        string    `json:"type"`
				Coordinates []float64 `json:"coordinates"`
			} `json:"geometry"`
			Properties struct {
				City     string `json:"city"`
				State    string `json:"state"`
				Distance struct {
					Value    float64 `json:"value"`
					Unitcode string  `json:"unitCode"`
				} `json:"distance"`
				Bearing struct {
					Value    int    `json:"value"`
					Unitcode string `json:"unitCode"`
				} `json:"bearing"`
			} `json:"properties"`
		} `json:"relativeLocation"`
		Forecastzone    string `json:"forecastZone"`
		County          string `json:"county"`
		Fireweatherzone string `json:"fireWeatherZone"`
		Timezone        string `json:"timeZone"`
		Radarstation    string `json:"radarStation"`
	} `json:"properties"`
}


// used as the properties of a weather forecast from a ForecastResp
type ForecastProperties struct {
	Updated           string `json:"updated"`
	Units             string    `json:"units"`
	Forecastgenerator string    `json:"forecastGenerator"`
	Generatedat       string `json:"generatedAt"`
	Updatetime        string `json:"updateTime"`
	Validtimes        string `json:"validTimes"`
	Elevation         struct {
		Value    float64 `json:"value"`
		Unitcode string  `json:"unitCode"`
	} `json:"elevation"`
	Periods []struct {
		Number           int         `json:"number"`
		Name             string      `json:"name"`
		Starttime        string      `json:"startTime"`
		Endtime          string      `json:"endTime"`
		Isdaytime        bool        `json:"isDaytime"`
		Temperature      int         `json:"temperature"`
		Temperatureunit  string      `json:"temperatureUnit"`
		Temperaturetrend interface{} `json:"temperatureTrend"`
		Windspeed        string      `json:"windSpeed"`
		Winddirection    string      `json:"windDirection"`
		Icon             string      `json:"icon"`
		Shortforecast    string      `json:"shortForecast"`
		Detailedforecast string      `json:"detailedForecast"`
	} `json:"periods"`
}

// used for NWS forecast API endpoint. Minorly modified
// https://api.weather.gov/gridpoints/{office}/{grid X},{grid Y}/forecast
type ForecastResp struct {
	Context  []interface{} `json:"@context"`
	Type     string        `json:"type"`
	Geometry struct {
		Type        string        `json:"type"`
		Coordinates [][][]float64 `json:"coordinates"`
	} `json:"geometry"`
	Properties ForecastProperties`json:"properties"`
}

